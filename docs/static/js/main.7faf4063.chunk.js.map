{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAe1C,OACC,0BAAMC,SATc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAKd,2BACCO,KAAK,OACLC,MAAOT,EACPU,SAjBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,Y,uBCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACP,mCACTC,EAFgB,iDAEgCC,UACrDH,GAHqB,6BACP,oCADO,SAMJI,MAAMF,GANF,cAMhBG,EANgB,gBAOCA,EAAIC,OAPL,uBAOdC,EAPc,EAOdA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZd,kBAefM,GAfe,4CAAH,sDCWLO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC7B,OACC,yBAAKc,UAAU,0CACd,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCgBQO,EAlBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACfd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACTxB,EAAQC,GAAUwB,MAAK,SAACX,GACvBS,EAAS,CACRf,KAAMM,EACNO,SAAS,SAGT,CAACpB,IAEGqB,EDb2BI,CAAazB,GAAjCa,EADmB,EACzBN,KAAca,EADW,EACXA,QAEtB,OACC,oCACC,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GACA,uBAAGJ,UAAU,oCAAb,cAED,yBAAKA,UAAU,aACbH,EAAOJ,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,eAAagB,IAAKhB,EAAIC,IAAQD,UEYpBiB,EAvBM,WAAO,IAAD,EACUzC,mBAAS,CAAC,gBADpB,mBACnB0C,EADmB,KACP3C,EADO,KAQ1B,OACC,oCACC,2CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACE2C,EAAWnB,KAAI,SAACT,GAAD,OACf,kBAAC,EAAD,CAAS0B,IAAK1B,EAAUA,SAAUA,UCfvC6B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.7faf4063.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst handleInputChange = (e) => {\n\t\tsetInputValue(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (inputValue.trim().length > 2) {\n\t\t\tsetCategories((cats) => [inputValue, ...cats]);\n\t\t\tsetInputValue('');\n\t\t}\n\t};\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","export const getGifs = async (category) => {\n\tconst apiKey = 'ix8TgORMIi8043e3hGCVKUjkSEtNIkAL';\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n\t\tcategory\n\t)}&limit=10&api_key=${apiKey}`;\n\n\tconst res = await fetch(url);\n\tconst { data } = await res.json();\n\tconst gifs = data.map((img) => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images?.downsized_medium.url,\n\t\t};\n\t});\n\treturn gifs;\n};\n","import React from 'react';\n\nconst GifGridItem = ({ title, url }) => {\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t);\n};\n\nexport default GifGridItem;\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\tconst { data: images, loading } = useFetchGifs(category);\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\t\t\t{loading && (\n\t\t\t\t<p className=\"animate__animated animate__flash\">Loading...</p>\n\t\t\t)}\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t{images.map((img) => (\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\n\tuseEffect(() => {\n\t\tgetGifs(category).then((images) => {\n\t\t\tsetState({\n\t\t\t\tdata: images,\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t});\n\t}, [category]);\n\n\treturn state; // { data: [], loading: true };\n};\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\tconst [categories, setCategories] = useState(['Dragon Ball']);\n\n\t// const handleAdd = () => {\n\t//     //setCategories([...categories, 'HunterXHunter']);\n\t//     setCategories(cats => [...categories, 'HunterXHunter'])\n\t// }\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExperApp</h2>\n\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t<hr />\n\n\t\t\t<ol>\n\t\t\t\t{categories.map((category) => (\n\t\t\t\t\t<GifGrid key={category} category={category} />\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}